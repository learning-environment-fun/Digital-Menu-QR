<div class="container-fluid order-summary">
    <div class="order-summary-list">
        <% @cart_props[:items].each do |item| %>
        <!--<span class="order-row">-->
        <span class="order-item"><%= "#{item.title} x#{item.quantity}" %></span>
        <span class="order-price"><%= "$#{item.dollars}" %></span>
        <button type="button" class="order-action btn btn-danger bmd-btn-icon">
            <i class="material-icons">delete_outline</i>
        </button>
        <!--</span>-->
        <% end %>
        
    </div>

    <span class="scroll-indicator">
        <i class="material-icons">keyboard_arrow_down</i>
    </span>

    <hr class="order-summary-divider">

    <span class="order-total">
        <h2 class="order-total-text">Total</h2>
        <h2 class="order-total-amount">$<%= @cart_props[:total] %></h2>
    </span>

    <button type="button" class="btn btn-success bmd-btn-icon">
        <i class="material-icons">more_vert</i>
    </button>
</div>

<script>
    // Determines if the passed element is overflowing its bounds,
    // either vertically or horizontally.
    // Will temporarily modify the "overflow" style to detect this
    // if necessary.
    // https://stackoverflow.com/questions/143815/determine-if-an-html-elements-content-overflows
    function checkOverflow(el) {
        var curOverflow = el.style.overflow;

        if (!curOverflow || curOverflow === "visible")
            el.style.overflow = "hidden";

        var isOverflowing = el.clientWidth < el.scrollWidth ||
            el.clientHeight < el.scrollHeight;

        el.style.overflow = curOverflow;

        return isOverflowing;
    }

    document.addEventListener('DOMContentLoaded', (_event) => {
        const list = document.querySelector('.order-summary-list');
        if (checkOverflow(list)) {
            console.log('im visible');
            document.querySelector('.scroll-indicator').classList.toggle('is-visible');
        }
    });
</script>